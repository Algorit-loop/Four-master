dp = dynamic programming 

xét một bài toán lớn, ta sẽ chia nhỏ vấn đề (hoặc là chia nhỏ bài toán)
bài toán lớn sẽ được tổng hợp từ các bài toán nhỏ 

---------------------------
chia làm 2 phần ? 
------- Phần 1 ---------
Là phần neo ?
Nghĩa là phần mà chúng ta biết chắc chắn kết quả 
------- Phần 2 ---------
Phần logic + thuật toán + công thức

------------------
ví dụ : 
Tính fibonacci thứ n ? 
f[n] ? -> f[n - 1] , f[n - 2] ?
f[n - 1] -> f[n - 2] ? f[n - 3] 
f[n - 2] -> f[n - 3] ? f[n - 4] ...
f[n] = f[n - 1] + f[n - 2] ? 
f[1] = 1 , f[2] = 1
for (int i = 3; i <= n; i++) f[i] = f[i - 1] + f[i - 2]; ?
--------------------------------
Đếm số cách phân tích số nguyên n = tổng của các số {1,2,3,...,k}
ví dụ 
n = 1 -> 1
n = 2 -> 1 + 1, 2 
n = 3 -> 1 + 1 + 1, 2 + 1, 1 + 2, 3
n = 4
1 + 1 + 1 + 1
2 + 2
3 + 1
1 + 3
1 + 1 + 2
1 + 2 + 1
2 + 1 + 1
--------// code ------------------
f[0] = 1; f[1] = 1; f[2] = 2;
for (int i = 3; i <= n; i++) f[i] = f[i - 1] (them 1) ket thuc 3 + f[i - 2] + f[i - 3];

f[4] = f[1] + 3 , f[2] + 2 , f[3] + 1
5 = f[4] + 1 = 1 + 3 + 1
5 = f[3] + 2 = 2 + 1 + 2
------0-----
0
------1-----
1
------2-----
1 + 1
2
-----3-----
1 + 1 + 1
2 + 1
1 + 2 
3
----4-------
1 + 3 
1 + 1 + 2
2 + 2 
1 + 1 + 1 + 1
2 + 1 + 1
1 + 2 + 1
3 + 1
------------
1 + 3
2 + 2
1 + 1 + 1 + 1
1 + 1 + 2
------------khong tinh hoan vi----------
f[1] = 1; f[2] = 2; f[3] = 3;
1 + 1 + 1 + 1 + 1 + 1
1 + 1 + 1 + 1 + 2
1 + 1 + 2 + 2 
2 + 2 + 2
1 + 2 + 3
3 + 3
1 + 1 + 1 + 3
--------------------------------------------
f[0] = 0;
for (int k = 1; k <= p; k++){
	for (int i = k; i <= n; i++){
		f[i] = f[i] + f[i - k];
	}
}
-------------------
f = [1,0,0,0,0,0,0]
------------------ them 1 
f = [1,1,1,1,1,1,1]
------------------ them 2
f = [1,1,2,2,3,3,4]
----------
====================| f[3] = 1 + 1 + 1, 2 + 1, 1 + 2, 3 
f[1] = 1
f[2] = 1 + 1
f[3] = 1 + 1 + 1
f[4] = 1 + 1 + 1 + 1
--------------------
f[1] = 1
f[2] = 1 + 1, 2 
f[3] = 1 + 1 + 1, 1 + 2 
f[4] = 1 + 1 + 1 + 1, 1 + 2 + 2, 2 + 2
-----------------------
f[1] = 1
f[2] = 1 + 1 , 2 
f[3] = 1 + 1 + 1 , 1 + 2 , 3 
f[4] = 1 + 1 + 1 + 1, 1 + 2 + 2, 2 + 2, 1 + 3 

////
1 + 1 + 1 + 1 + 3
1 + 1 + 2 + 3
2 + 2 + 3 

--------------------------------
tính hoán vị ????????
sử dung {1,2,3} -> sử dung {1,2,3,4,...,k}
f[i] = f[i - 1] + f[i - 2] + f[i - 3];
// code 