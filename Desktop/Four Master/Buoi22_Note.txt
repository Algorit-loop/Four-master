BAI 4 : 
string s; int n;
inline string cv_string(ll x){
    if (x == 0) return "0";
    string res = "";
    while (x > 0){
        res = res + char(x%10+48);
        x /= 10;
    }
    reverse(all(res));
    return res;
}
vector <int> findrp(const string &s, const int &i, const int &j){
    int len = j - i + 1;
    vector <int> v;
    for (int k = 1; k <= len / 2; k++){
        if (len % k == 0){
            bool check = true;
            for (int p = i; p <= j; p++){
                if (s[p] != s[i + (p - i) % k]){
                    check = false;
                    break;
                }
            }
            if (check) v.pb(k);
        }
    }
    return v;
}
int main()
{
    FASTIO;
    // cin >> s;
    cin >> s;
    //for (int i = 1; i <= 300; i++) s = s + char(range(97,97+1));
    clock_t st,en; st = clock();
    n = s.size();
    vector <vector<string>> dp(n,vector<string>(n));
    for (int i = 0; i < n; i++) dp[i][i] = s[i];
    for (int len = 2; len <= n; len++){
        for (int i = 0; i < n - len + 1; i++){
            int j = i + len - 1;
            dp[i][j] = s.substr(i,len);
            for (int k = i; k < j; k++){
                if (dp[i][j].size() > dp[i][k].size()+dp[k+1][j].size()){
                    dp[i][j] = dp[i][k]+dp[k+1][j];
                }
                else
                if (dp[i][j].size() == dp[i][k].size() + dp[k+1][j].size()){
                    dp[i][j] = min(dp[i][j],dp[i][k]+dp[k+1][j]);
                }
            }
            vector <int> rpv = findrp(s,i,j);
            for (auto g : rpv){
                int m = len / g;
                string rp = cv_string(m) + "(" + dp[i][i + g - 1] + ")";
                if (rp.size() < dp[i][j].size()){
                    dp[i][j] = rp;
                }
                else
                if (rp.size() == dp[i][j].size()){
                    dp[i][j] = min(dp[i][j], rp);
                }
            }
        }
    }
    cout << dp[0][n-1] << "\n";
    en = clock();
    cout << "Time: " << (double)(en-st)/CLOCKS_PER_SEC;
    return 0;
}
-----------------------------------
BAI 2:
ll dx(ll x, bool p){
    ll res = x;
    if (p & 1) res /= 10;
    while (x > 0){
        res = res * 10 + (x % 10);
        x /= 10;
    }
    return res;
}
ll g(ll x, bool p){
    ll l = 1 , r = (ll)1e9, res = 0;
    while (l <= r){
        ll mid = (l + r) >> 1;
        if (dx(mid,p) <= x){
            res = mid;
            l = mid + 1;
        } else r = mid - 1;
    }
    return res;
}
